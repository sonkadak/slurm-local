---
- include_vars: "{{ ansible_os_family | lower }}.yml"

- name: install dependencies
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - numactl
  when: ansible_distribution == 'Ubuntu'

- name: install dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - psmisc
    - numactl
  when: ansible_os_family == "RedHat"

- name: add cgroups to grub options
  lineinfile:
    dest: /etc/default/grub
    insertafter: '^GRUB_CMDLINE_LINUX=[^\\$]'
    line: 'GRUB_CMDLINE_LINUX="${GRUB_CMDLINE_LINUX} cgroup_enable=memory swapaccount=1"'
  register: update_grub

- name: update grub
  block:
    - name: update grub
      command: update-grub
      register: update_grub_cmd
      changed_when: update_grub_cmd.rc == 0
    - name: reboot after updating grub config
      reboot:
        reboot_timeout: "{{ slurm_node_reboot_timeout }}"
  when: update_grub.changed and ansible_os_family == "Debian"

- name: update grub
  block:
    - name: update grub
      command: grub2-mkconfig -o /boot/grub2/grub.cfg
      register: grub2_mkconfig_cmd
      changed_when: grub2_mkconfig_cmd.rc == 0
    - name: reboot after updating grub config
      reboot:
        reboot_timeout: "{{ slurm_node_reboot_timeout }}"
  when: update_grub.changed and ansible_os_family == "RedHat"

- name: create sysconfig dir
  file:
    path: "{{ slurm_sysconf_dir }}"
    state: directory
    owner: root
    mode: 0755

- name: create slurm directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    mode: 0755
  with_items:
    - "{{ slurm_config_dir }}"
    - "{{ slurm_config_dir }}/shared"
    - "{{ slurm_config_dir }}/shared/bin"
    - /var/log/slurm
    - /var/spool/slurm/d
  tags:
    - prolog
    - epilog

- name: configure slurmd for pmix
  blockinfile:
    path: "{{ slurm_sysconf_dir }}/slurmd"
    create: yes
    mode: "0644"
    block: |
      PMIX_MCA_ptl=^usock
      PMIX_MCA_psec=none
      PMIX_SYSTEM_TMPDIR=/var/empty
      PMIX_MCA_gds=hash
  notify: restart slurmd
  tags: config

- name: configure slurm.conf
  template:
    src: "slurm.conf.j2"
    dest: "{{ slurm_config_dir }}/slurm.conf"
    mode: "0644"
  notify:
  - restart slurmd
  tags:
  - config

- name: configure cgroup.conf
  template:
    src: "cgroup.conf"
    dest: "{{ slurm_config_dir }}/cgroup.conf"
    mode: "0644"
  notify:
  - restart slurmd
  tags:
  - config

- name: configure gres.conf
  template:
    src: "gres.conf"
    dest: "{{ slurm_config_dir }}/gres.conf"
    mode: "0644"
  notify:
  - restart slurmd
  tags:
  - config

- name: Copy Slurm service files
  copy:
    src: "{{ slurm_build_dir }}/etc/{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    remote_src: yes
  with_items:
    - slurmd.service

- name: start slurmd
  become: true
  systemd:
    name: slurmd
    state: restarted
    enabled: yes
    daemon-reload: yes
