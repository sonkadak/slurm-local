---
- name: Set hwloc install directory fact
  set_fact:
    hwloc_install_dir: "{{ hwloc_install_dir }}"

- name: Ensure build directory exists
  file:
    path: "{{ hwloc_build_dir }}"
    state: directory

- name: Copy hwloc source from NFS if local install
  copy:
    src: >-
      {{
        (inventory_hostname in groups['nfs-server'])
        | ternary(repo_path_root, local_repo_mount)
      }}/source-packages/hwloc-{{ hwloc_version }}.tar.gz
    dest: "{{ hwloc_build_dir }}/hwloc-{{ hwloc_version }}.tar.gz"
    remote_src: yes
  when: local_install | default(false)

- name: Download hwloc source from URL if not local install
  get_url:
    url: "https://download.open-mpi.org/release/hwloc/v{{ hwloc_version_major }}.{{ hwloc_version_minor }}/hwloc-{{ hwloc_version }}.tar.gz"
    dest: "{{ hwloc_build_dir }}/hwloc-{{ hwloc_version }}.tar.gz"
  when: not local_install | default(false)

- name: Extract hwloc source
  unarchive:
    src: "{{ hwloc_build_dir }}/hwloc-{{ hwloc_version }}.tar.gz"
    dest: "{{ hwloc_build_dir }}"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Check if previous build exists
  stat:
    path: "{{ hwloc_build_dir }}/Makefile"
  register: hwloc_build_dir_check

- name: Clean previous builds
  command: make distclean
  args:
    chdir: "{{ hwloc_build_dir }}"
  when: hwloc_build_dir_check.stat.exists

- name: Configure hwloc
  command: ./configure --prefix={{ hwloc_install_dir }} --enable-static --disable-cairo --disable-libxml2 --enable-netloc --enable-plugins
  args:
    chdir: "{{ hwloc_build_dir }}"

- name: Build hwloc
  community.general.make:
    chdir: "{{ hwloc_build_dir }}"
    jobs: "{{ ansible_processor_cores * ansible_processor_vcpus }}"
    targets:
      - all

- name: Install hwloc
  community.general.make:
    chdir: "{{ hwloc_build_dir }}"
    jobs: "{{ ansible_processor_cores * ansible_processor_vcpus }}"
    targets:
      - install